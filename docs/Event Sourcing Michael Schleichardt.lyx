#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref true
\pdf_title "Event Sourcing"
\pdf_author "Michael Schleichardt"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Übung 3: Event Sourcing
\end_layout

\begin_layout Author
Michael Schleichardt
\end_layout

\begin_layout Section
Anwendungsbeispiel
\end_layout

\begin_layout Standard
Anwendungen mit Event Sourcing sammeln alle Änderungen des Applikationszustandes
 als Sequenz von Events.
\begin_inset Foot
status open

\begin_layout Plain Layout
Vgl.
 
\begin_inset CommandInset href
LatexCommand href
target "http://martinfowler.com/eaaDev/EventSourcing.html"

\end_inset

, abgerufen am 27.06.2012
\end_layout

\end_inset

 Folglich sind Änderungen der Applikation revisionssicher und es kann nicht
 nur der Zustand abgerufen werden, sondern auch der Weg dort hin.
\end_layout

\begin_layout Standard
Als Anwendungsbeispiel wurde das Aufstellen eines Mühlespiels gewählt.
 Der Zustand der Applikation besteht aus der Verteilung der Steine auf dem
 Spielfeld und der Information welcher Spieler am Zuge ist.
 Die Events sind die Positionierung der eigenen Spielsteine und das Wegnehmen
 gegnerischer Steine.
 Brettspiele wie Mühle sind besonders gut für Event Sourcing geeignet, da
 man während oder nach des Spiel alle vorherigen Schritte analysieren kann
 und ggf.
 alternative Vorgehensweisen testen kann.
 
\end_layout

\begin_layout Standard
Der Spielablauf kann der deutschen Wikpedia entnommen werden: 
\begin_inset CommandInset href
LatexCommand href
name "de.wikipedia.org/wiki/Mühle_(Spiel)#Spielablauf"
target "http://de.wikipedia.org/wiki/M%C3%BChle_(Spiel)#Spielablauf"

\end_inset

.
\end_layout

\begin_layout Standard
Zur Umsetzung wurde CoffeeScript gewählt.
 CoffeeScript ist dynamische Scriptsprache, die in JavaScript kompiliert
 wird, jedoch eine schlankere Syntax und Klassen bietet und im Kontext von
 Rails, NodeJS und dem Play Framework eingesetzt wird.
\begin_inset Foot
status open

\begin_layout Plain Layout
Vgl.
 
\begin_inset CommandInset href
LatexCommand href
target "http://de.wikipedia.org/wiki/CoffeeScript"

\end_inset

, abgerufen am 27.06.2012
\end_layout

\end_inset

 Als Javascript Präprozessor ist CoffeeScript gut geeignet mit Events und
 dem JSON-Datenformat zu arbeiten.
 
\end_layout

\end_body
\end_document
